language: c
dist: xenial
cache: ccache

addons:
  apt:
    packages:
      - python3
      - python3-pip
      - python3-setuptools
      # required by openssl installer
      - perl

matrix:
  include:
    - name: "Linux GCC: +Debian packages +BuiltinRegex +Strict"
      os: linux
      compiler: gcc
      env: ADDITIONAL_BUILDS="debian" LINKAGE=std
      before_script:
        - ./configure --install-deps --disable-lz4-ext --disable-regex-ext --prefix="$PWD/dest" --enable-strip

#    - name: "RPM packages"
#      os: linux
#      compiler: gcc
#      env: ADDITIONAL_BUILDS="centos" SKIP_MAKE=y

    - name: "Linux clang: +alpine +manylinux +werror"
      os: linux
      compiler: clang
      env: ADDITIONAL_BUILDS="alpine manylinux2010_x86_64" LINKAGE=std
      before_script:
        - ./configure --install-deps --disable-lz4-ext --prefix="$PWD/dest" --enable-werror --enable-strip

#    - name: "Linux clang: +static +alpine-static -gssapi"
#      os: linux
#      compiler: clang
#      env: ADDITIONAL_BUILDS="alpine-static" LINKAGE=static
#      before_script:
#        - ./configure --enable-static --install-deps --source-deps-only --disable-gssapi --disable-lz4-ext --prefix="$PWD/dest" --enable-strip

#    - name: "OSX clang: +static"
#      os: osx
#      compiler: clang
#      env: LINKAGE=static HOMEBREW_NO_AUTO_UPDATE=1
#      before_script:
#        - ./configure --install-deps --source-deps-only --disable-lz4-ext --prefix="$PWD/dest" --enable-static --enable-strip

#    - name: "Linux GCC arm64: +static -gssapi"
#      os: linux
#      arch: arm64
#      dist: bionic
#      compiler: gcc
#      env: LINKAGE=std
#      before_script:
#        - ./configure --disable-gssapi --install-deps --source-deps-only --enable-static --disable-lz4-ext --prefix="$PWD/dest" --enable-strip

install:
  - ccache -s || echo "CCache is not available."
  - rm -rf artifacts dest
  - mkdir -p dest artifacts/p-librdkafka__bld-travis__plat-${TRAVIS_OS_NAME}__arch-${TRAVIS_CPU_ARCH}__tag-${TRAVIS_TAG}__sha-${TRAVIS_COMMIT}__bid-${TRAVIS_JOB_NUMBER}
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then sudo apt update || true; fi
  - if [[ $TRAVIS_DIST == "trusty" || $TRAVIS_DIST == "xenial" ]]; then sudo apt-get install -y libssl1.0.0 libssl-dev ; fi
  - if [[ $TRAVIS_DIST == "bionic" || $TRAVIS_DIST == "focal" ]]; then sudo apt-get install -y libssl1.1 libssl-dev ; fi

before_cache:
  - if [[ $TRAVIS_OS_NAME == windows ]]; then $msys2 pacman --sync --clean --noconfirm ; fi

script:
  - if [[ $SKIP_MAKE != y ]]; then (make -j2 all examples check && make -j2 -C tests build) || travis_terminate 1 ; fi
  # Tag:    Run quick local test suite on
  # No tag: Run unit tests.
  - if [[ $SKIP_MAKE != y && $RUN_INTEGRATION_TESTS != y ]]; then if [[ -n $TRAVIS_TAG ]]; then make -C tests run_local_quick; else make -C tests unit ; fi ; fi
  - if [[ $SKIP_MAKE != y ]]; then make install || travis_terminate 1 ; fi
  - if [[ -z $NO_ARTIFACTS ]]; then (cd dest && tar cvzf ../artifacts/p-librdkafka__bld-travis__plat-${TRAVIS_OS_NAME}__arch-${TRAVIS_CPU_ARCH}__tag-${TRAVIS_TAG}__sha-${TRAVIS_COMMIT}__bid-${TRAVIS_JOB_NUMBER}/librdkafka-${CC}.tar.gz .) ; fi
  - if [[ 1!=1 ]]; then for distro in $ADDITIONAL_BUILDS ; do packaging/tools/distro-build.sh $distro --enable-strip || travis_terminate 1 ; done ; fi
  - if [[ $COPYRIGHT_CHECK == y ]]; then make copyright-check || travis_terminate 1; fi
  - if [[ -z $TRAVIS_TAG && $RUN_INTEGRATION_TESTS == y ]]; then (cd tests && travis_retry ./interactive_broker_version.py -c "make quick" 2.7.0) || travis_terminate 1 ; fi
  - if [[ -f tests/core ]] && (which gdb >/dev/null); then (cd tests && LD_LIBRARY_PATH=../src:../src-cpp gdb ./test-runner core < backtrace.gdb) ; fi

after_success:
  - ./deploy.sh
